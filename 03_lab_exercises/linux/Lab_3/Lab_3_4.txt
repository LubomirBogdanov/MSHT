#include <msp430.h> 

/**
 * main.c
 */

void main(void)
{
    unsigned long i;
    WDTCTL = WDTPW | WDTHOLD;   // Stop watchdog timer to prevent time out reset
    PM5CTL0 &= ~LOCKLPM5;       // Изключи високоимпедансното състояние на GPIO

    P8DIR |= 0b00110000;        // Конфигурирай изводи P8.4 и P8.5 като изходи
    P8OUT &= ~0b00110000;       // Инициализирай изводи P8.4 и P8.5 с лог. 0
    P9DIR |= 0b01000000;        // Конфигурирай извод P9.6 като изход
    P9OUT &= ~0b01000000;       // Инициализирай извод P9.6 с лог. 0

    ???                         // Конфигурирай извод P1.1 като вход, MSP430FR6989 Userguide (стр. 389)
    ???                         // Включи издърпващ резистор на извод P1.1, MSP430FR6989 Userguide (стр. 390)
    ???                         // Свържи издърпващия резистор към захранване Vdd, MSP430FR6989 Userguide (стр. 389)

    ???                         // Избери прекъсване по падащ фронт, MSP430FR6989 Userguide (стр. 391)
    ???                         // Нулирай всички флагове на прекъсване за порта, MSP430FR6989 Userguide (стр. 392)
    ???                         // Разреши прекъсването от извод P1.1, MSP430FR6989 Userguide (стр. 391)

    __enable_interrupt();       // Разреши глобално прекъсванията към микропроцесора MSP430.

    while (1)
    {
        P8OUT |= 0b00010000;
        P8OUT &= ~0b00100000;
        for (i = 0; i < 40000; i++)
        {
        }
        P8OUT &= ~0b00010000;
        P8OUT |= 0b00100000;
        for (i = 0; i < 40000; i++)
        {
        }
    }
}

#pragma vector=PORT1_VECTOR     // Хендлер на прекъсване за GPIO модул 1.
__interrupt void port1_handler(void)
{
    unsigned int interrupt_flag;
    unsigned long i;

    interrupt_flag = P1IFG;     // Прочети регистъра с флаговете.

    switch (interrupt_flag)
    {
    case 0b00000001:            // Прекъсване от извод P1.0.
        break;
    case 0b00000010:            // Прекъсване от извод P1.1.
        ???                     // Преобърни извод P9.6, чрез логически оператор от C
        break;
    default:                    // Неразпознат източник на прекъсване.
        break;
    }

    // Закъснение срещу притрепване на контакта.
    for (i = 0; i < 30000; i++)
    {

    }

    P1IFG = 0b00000000;         // Нулирай флаговете на прекъсване.
}
