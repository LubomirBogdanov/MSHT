;-------------------------------------------------------------------------------
; MSP430 Assembler Code Template for use with TI Code Composer Studio
;
;
;-------------------------------------------------------------------------------
            .cdecls C,LIST,"msp430.h"       ; Include device header file

;-------------------------------------------------------------------------------
            .def    RESET                   ; Export program entry-point to
                                            ; make it known to linker.
;-------------------------------------------------------------------------------
            .text                           ; Assemble into program memory.
            .retain                         ; Override ELF conditional linking
                                            ; and retain current section.
            .retainrefs                     ; And retain any sections that have
                                            ; references to current section.

;-------------------------------------------------------------------------------
; Начална инициализация (изпълнява се еднократно след включване на захранването
; или при reset на микроконтролера)
;-------------------------------------------------------------------------------

RESET       mov.w   #__STACK_END,SP         ; Initialize stackpointer
StopWDT     mov.w   #WDTPW|WDTHOLD,&WDTCTL  ; Stop watchdog timer

            mov.w   #0x00, R4               ; Нулирай работен регистър R4
            mov.w   #0x00, R5               ; Нулирай работен регистър R5
            mov.w   #0x0020, R7             ; Зареди числото 32 в R7
            mov.w   #0x1C00, R8             ; Зареди началния адрес на SRAM в R8
            mov.w   #0x1C00, R9             ; Зареди началния адрес на SRAM в R9
            mov.w   #0x0000, &0x1C00        ; Инициализирай първите 2 байта от SRAM

            clr     R2                      ; Нулирай STATUS регистъра

; Нулирай първите 64 байта от SRAM
zero        mov.w   0(R8), 0(R9)
            add.w   #2, R9
            dec.w   R7
            jnz zero



;-------------------------------------------------------------------------------
; Главен цикъл (изпълнява се бекраен брой пъти)
;-------------------------------------------------------------------------------

MainLoop    nop
                                            ; MSP430FR6989 Userguide (стр. 386)
            mov.w   #0x5555, R4             ; Поставете точка на прекъсване на този ред
            mov.w   R4, R5                  ; Демонстрация на регистрова адресация

            mov.w   #0x1BFF, R4             ; Демонстрация на Непосредствена адресация
            mov.w   #0x1C00, R5             ; Демонстрация на Непосредствена адресация
            mov.w   #0x3412, &0x1C00
            mov.w   #0x7856, &0x1C04

            mov.w   1(R4), 4(R5)            ; Демонстрация на Индексна адресация

L3          mov.w   #0xcdab, &0x1C00

            mov.w   &0x1C00, &0x1C04        ; Демонстрация на Абсолютна адресация

            clr.w   &0x1C04
            mov.w   #0x1C00, R4

            mov.w   @R4, &0x1C04            ; Демонстрация на Индиректна адресация

            mov.w   R4, &0x1C04

            mov.w   @R4+, R5                ; Демонстрация на Индиректна автоинкрементираща
            mov.w   @R4+, R5                ; адресация
            mov.w   @R4+, R5
            mov.w   @R4+, R5
            mov.w   #0x1C00, R4

            mov.b   @R4+, R5                ; Демонстрация на Индиректна автоинкрементираща
            mov.b   @R4+, R5                ; адресация с байтов достъп
            mov.b   @R4+, R5
            mov.b   @R4+, R5

            mov.w   #0x1234, R4
            mov.w   #0xabcd, R5

            push.w  R4                      ; Демонстрация на PUSH и POP инструкции
            push.w  R5                      ; Обърнете внимание на реда на извикването им

            mov.w   #0x5555, R4
            mov.w   #0x3333, R5

            pop.w   R5
            pop.w   R4

            jmp     MainLoop
            nop

;-------------------------------------------------------------------------------
; Дефиниция на указателя на стека
;-------------------------------------------------------------------------------
            .global __STACK_END
            .sect   .stack

;-------------------------------------------------------------------------------
; Дефиниция на вектори на прекъсването
;-------------------------------------------------------------------------------
            .sect   ".reset"                ; MSP430 RESET Vector
            .short  RESET
