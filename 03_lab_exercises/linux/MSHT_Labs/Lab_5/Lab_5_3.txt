#include <msp430.h> 

/**
 * main.c
 */

void main(void)
{
    WDTCTL = WDTPW | WDTHOLD;
    PM5CTL0 &= ~LOCKLPM5;

    // Koнфигурирай мултиплексора за работа с извод P4.3 като UCB1STE (SS)
    P4SEL1 |= 0b00001000;
    P4SEL0 &= ~0b00001000;

    // Koнфигурирай мултиплексора за работа с извод P3.0 като UCB1CLK (SCK)
    P3SEL1 &= ~0b00000001;
    P3SEL0 |= 0b00000001;
    LCDCPCTL2 &= ~0b00000100;  // Изключи сигналът S34 на LCD модула

    // Koнфигурирай мултиплексора за работа с извод P3.1 като UCB1SIMO (MOSI)
    P3SEL1 &= ~0b00000010;
    P3SEL0 |= 0b00000010;
    LCDCPCTL2 &= ~0b00000010;  // Изключи сигналът S33 на LCD модула

    UCB1CTLW0 |= UCSWRST;      // Задръж SPI модула в ресет

    // SPI master | режим - синхронен интерфейс | формат на данните MSB първи |
    // 4-изводен SPI (MISO не се използва в л. упр.) със SS активно ниво - ниско | STE извод
    // използван като SS сигнал | такт на SPI модул -> от SMCLK

    UCB1CTLW0 |= (UCMST | UCSYNC | UCMSB | UCMODE_2 | UCSTEM | UCSSEL_3);

    UCB1BRW = 0x02;            // Раздели входната честота за SPI модула на 2

    UCB1CTLW0 ?= ???;          // Задай ниво на SCK, когато не се предават данни
                               // Задай тук високо ниво, т.е. CPOL=1
                               // MSP430FR6989 Userguide (стр. 799)

    UCB1CTLW0 ?= ???;          // Задай фронт на МОSI, по който трябва
                               // да се четат данните.
                               // Задай тук първия фронт, т.е. CPHA=0
                               // MSP430FR6989 Userguide (стр. 799)

    UCB1CTLW0 &= ~UCSWRST;     // Пусни SPI модула от ресет

    while (1)
    {
        ??? = ???;             // Запиши числото, което трябва да се изпрати
                               // в съответния изходен (TX) регистър
                               // MSP430FR6989 Userguide (стр. 801)
        __delay_cycles(50);
    }
}
