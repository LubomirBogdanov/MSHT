;-------------------------------------------------------------------------------
; MSP430 Assembler Code Template for use with TI Code Composer Studio
;
;
;-------------------------------------------------------------------------------
            .cdecls C,LIST,"msp430.h"       ; Include device header file

;-------------------------------------------------------------------------------
            .def    RESET                   ; Export program entry-point to
                                            ; make it known to linker.
;-------------------------------------------------------------------------------
            .text                           ; Assemble into program memory.
            .retain                         ; Override ELF conditional linking
                                            ; and retain current section.
            .retainrefs                     ; And retain any sections that have
                                            ; references to current section.

;-------------------------------------------------------------------------------

;-------------------------------------------------------------------------------
; Начална инициализация (изпълнява се еднократно след включване на захранването
; или при reset на микроконтролера)
;-------------------------------------------------------------------------------

RESET       mov.w   #__STACK_END,SP         ; Initialize stackpointer
StopWDT     mov.w   #WDTPW|WDTHOLD,&WDTCTL  ; Stop watchdog timer

            bic.w   #LOCKLPM5,&PM5CTL0      ; Изключи високоимпедансното състоя-
                                            ; ние на входно-изходните изводи

            bis.b   #11110000b, &P8DIR      ; Конфигуриране на изводи P8.4, P8.5,
                                            ; P8.6 и P8.7 като изходи

            bis.b   #01100011b, &P9DIR      ; Конфигуриране на изводи P9.0, P9.1,
                                            ; P9.5 и P9.6 като изходи

            bic.b   #11110000b, &P8OUT      ; Инициализиране на тези изходи в
            bic.b   #01100011b, &P9OUT      ; логическа 0

;-------------------------------------------------------------------------------
; Главен цикъл (изпълнява се бекраен брой пъти)
;-------------------------------------------------------------------------------

MainLoop    bis.b   #00010000b,&P8OUT       ; Включване на D1
            call    #Delay                  ; Софтуерно закъснение
            bic.b   #00010000b,&P8OUT       ; Изключване на D1

            bis.b   #00100000b,&P8OUT       ; Включване на D2
            call    #Delay                  ; Софтуерно закъснение
            bic.b   #00100000b,&P8OUT       ; Изключване на D2

            bis.b   #01000000b,&P8OUT       ; Включване на D3
            call    #Delay                  ; Софтуерно закъснение
            bic.b   #01000000b,&P8OUT       ; Изключване на D3

            bis.b   #10000000b,&P8OUT       ; Включване на D4
            call    #Delay                  ; Софтуерно закъснение
            bic.b   #10000000b,&P8OUT       ; Изключване на D4

            bis.b   #00000001b,&P9OUT       ; Включване на D5
            call    #Delay                  ; Софтуерно закъснение
            bic.b   #00000001b,&P9OUT       ; Изключване на D5

            bis.b   #00000010b,&P9OUT       ; Включване на D6
            call    #Delay                  ; Софтуерно закъснение
            bic.b   #00000010b,&P9OUT       ; Изключване на D6

            bis.b   #00100000b,&P9OUT       ; Включване на D7
            call    #Delay                  ; Софтуерно закъснение
            bic.b   #00100000b,&P9OUT       ; Изключване на D7

            bis.b   #01000000b,&P9OUT       ; Включване на D8
            call    #Delay                  ; Софтуерно закъснение
            bic.b   #01000000b,&P9OUT       ; Изключване на D8

            jmp     MainLoop                ; Върни се на реда с етикет
                                            ; MainLoop

;-------------------------------------------------------------------------------
; Подпрограма за реализиране на софтуерно закъснение
;-------------------------------------------------------------------------------

Delay:      mov.w   #65535,R15              ; Запиши в регистър R15 65535
L2          dec.w   R15                     ; Намали стойността в R15 с 1
            jnz     L2                      ; Ако R15 не е 0, върни се в L2
            ret                             ; Излез от подпрограмата

;-------------------------------------------------------------------------------
; Дефиниция на указателя на стека
;-------------------------------------------------------------------------------
            .global __STACK_END
            .sect   .stack

;-------------------------------------------------------------------------------
; Дефиниция на вектори на прекъсването
;-------------------------------------------------------------------------------
            .sect   ".reset"                ; MSP430 RESET Vector
            .short  RESET
