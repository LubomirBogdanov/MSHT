#include <msp430.h> 

/**
 * main.c
 */

//-------------------------------------------------------------------------------
// Подпрограма за реализиране на софтуерно закъснение. Изпълнява се, когато
// бъде извикана чрез delay().
//-------------------------------------------------------------------------------

void delay()
{
    volatile long i;
    for (i = 0; i < 65535; i++) // Празен цикъл. На всеки такт, i се
    {                           // увеличава с 1, докато стигне 65535,
    }                           // след което приключва изпълнението на цикъла
}

void main(void)
{

//-------------------------------------------------------------------------------
// Начална инициализация (изпълнява се еднократно след включване на захранването
// или при reset на микроконтролера)
//-------------------------------------------------------------------------------

    WDTCTL = WDTPW | WDTHOLD;   // Изключи watchdog таймера
    PM5CTL0 &= ~LOCKLPM5;       // Изключи високоимпедансното състоя-
                                // ние на входно-изходните изводи

    P8DIR |= 0b11110000;        // Конфигуриране на изводи P8.4, P8.5,
                                // P8.6 и P8.7 като изходи

    P9DIR |= 0b01100011;        // Конфигуриране на изводи P9.0, P9.1,
                                // P9.5 и P9.6 като изходи

    P8OUT &= ~0b11110000;       // Инициализиране на тези изходи в
    P9OUT &= ~0b01100011;       // логическа 0

//-------------------------------------------------------------------------------
// Главен цикъл (изпълнява се бекраен брой пъти)
//-------------------------------------------------------------------------------

    while (1)
    {
        P8OUT |= 0b00010000;    // Включване на D1
        delay();                // Софтуерно закъснение
        P8OUT &= ~0b00010000;   // Изключване на D1

        P8OUT |= 0b00100000;    // Включване на D2
        delay();                // Софтуерно закъснение
        P8OUT &= ~0b00100000;   // Изключване на D2

        P8OUT |= 0b01000000;    // Включване на D3
        delay();                // Софтуерно закъснение
        P8OUT &= ~0b01000000;   // Изключване на D3

        P8OUT |= 0b10000000;    // Включване на D4
        delay();                // Софтуерно закъснение
        P8OUT &= ~0b10000000;   // Изключване на D4

        P9OUT |= 0b00000001;    // Включване на D5
        delay();                // Софтуерно закъснение
        P9OUT &= ~0b00000001;   // Изключване на D5

        P9OUT |= 0b00000010;    // Включване на D6
        delay();                // Софтуерно закъснение
        P9OUT &= ~0b00000010;   // Изключване на D6

        P9OUT |= 0b00100000;    // Включване на D7
        delay();                // Софтуерно закъснение
        P9OUT &= ~0b00100000;   // Изключване на D7

        P9OUT |= 0b01000000;    // Включване на D8
        delay();                // Софтуерно закъснение
        P9OUT &= ~0b01000000;   // Изключване на D8
    }

}
